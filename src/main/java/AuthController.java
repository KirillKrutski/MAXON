import io.javalin.Javalin;
import java.util.Map;

public class AuthController {
    public static void setupRoutes(Javalin app) {
        // API –¥–ª—è –≤—Ö–æ–¥–∞
        app.post("/api/login", ctx -> {
            String username = ctx.formParam("username");
            String password = ctx.formParam("password");

            System.out.println("üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: " + username);

            if (username == null || password == null || username.trim().isEmpty()) {
                ctx.json(Map.of("success", false, "message", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è"));
                return;
            }

            User user = DatabaseService.authenticateUser(username, password);
            if (user != null) {
                System.out.println("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: " + username + " (—Ä–æ–ª—å: " + user.getRole() + ")");
                ctx.sessionAttribute("user", user);
                ctx.json(Map.of("success", true, "role", user.getRole()));
            } else {
                System.out.println("‚ùå –ù–µ—É–¥–∞—á–Ω—ã–π –≤—Ö–æ–¥: " + username);
                ctx.json(Map.of("success", false, "message", "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å"));
            }
        });

        // API –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        app.post("/api/register", ctx -> {
            String username = ctx.formParam("username");
            String password = ctx.formParam("password");

            System.out.println("üìù –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + username);

            if (username == null || password == null || username.trim().isEmpty()) {
                ctx.json(Map.of("success", false, "message", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è"));
                return;
            }

            if (username.length() < 3) {
                ctx.json(Map.of("success", false, "message", "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞"));
                return;
            }

            if (password.length() < 3) {
                ctx.json(Map.of("success", false, "message", "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞"));
                return;
            }

            boolean success = DatabaseService.registerUser(username, password);
            if (success) {
                System.out.println("‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: " + username);
                ctx.json(Map.of("success", true, "message", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É."));
            } else {
                System.out.println("‚ùå –ù–µ—É–¥–∞—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: " + username);
                ctx.json(Map.of("success", false, "message", "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∑–∞–Ω—è—Ç–æ"));
            }
        });

        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        app.get("/api/user/current", ctx -> {
            User user = ctx.sessionAttribute("user");
            if (user != null) {
                ctx.json(user);
            } else {
                ctx.status(401).json(Map.of("error", "Not authenticated"));
            }
        });

        // –í—ã—Ö–æ–¥ - –¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó!
        app.post("/api/logout", ctx -> {
            System.out.println("üö™ –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
            ctx.req().getSession().invalidate();
            ctx.redirect("/");
        });
    }
}